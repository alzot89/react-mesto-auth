[{"C:\\Users\\Asus\\dev\\mesto-react\\src\\index.js":"1","C:\\Users\\Asus\\dev\\mesto-react\\src\\reportWebVitals.js":"2","C:\\Users\\Asus\\dev\\mesto-react\\src\\utils\\api.js":"3","C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\App.js":"4","C:\\Users\\Asus\\dev\\mesto-react\\src\\contexts\\CurrentUserContext.js":"5","C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\EditAvatarPopup.js":"6","C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\Footer.js":"7","C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\Header.js":"8","C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\ImagePopup.js":"9","C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\Main.js":"10","C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\PopupWithForm.js":"11","C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\EditProfilePopup.js":"12","C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\AddPlacePopup.js":"13","C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\ConfirmPopup.js":"14","C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\Card.js":"15","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\index.js":"16","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\reportWebVitals.js":"17","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\App.js":"18","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\Header.js":"19","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\AddPlacePopup.js":"20","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\Main.js":"21","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\Footer.js":"22","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\EditAvatarPopup.js":"23","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\EditProfilePopup.js":"24","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\ImagePopup.js":"25","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\ConfirmPopup.js":"26","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\utils\\api.js":"27","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\contexts\\CurrentUserContext.js":"28","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\Card.js":"29","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\PopupWithForm.js":"30","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\Register.js":"31","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\ProtectedRoute.js":"32","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\Login.js":"33","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\InfoTooltip.js":"34","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\utils\\auth.js":"35"},{"size":511,"mtime":1612446895588,"results":"36","hashOfConfig":"37"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"37"},{"size":3808,"mtime":1613381838221,"results":"39","hashOfConfig":"37"},{"size":4906,"mtime":1613836747315,"results":"40","hashOfConfig":"37"},{"size":84,"mtime":1613051025225,"results":"41","hashOfConfig":"37"},{"size":1521,"mtime":1613835455236,"results":"42","hashOfConfig":"37"},{"size":228,"mtime":1613400776014,"results":"43","hashOfConfig":"37"},{"size":277,"mtime":1613401284596,"results":"44","hashOfConfig":"37"},{"size":1257,"mtime":1614419279244,"results":"45","hashOfConfig":"37"},{"size":2003,"mtime":1613401068409,"results":"46","hashOfConfig":"37"},{"size":1787,"mtime":1613837331169,"results":"47","hashOfConfig":"37"},{"size":3359,"mtime":1613836747254,"results":"48","hashOfConfig":"37"},{"size":2721,"mtime":1613835272362,"results":"49","hashOfConfig":"37"},{"size":412,"mtime":1613401203529,"results":"50","hashOfConfig":"37"},{"size":1404,"mtime":1613401235694,"results":"51","hashOfConfig":"37"},{"size":604,"mtime":1614426231260,"results":"52","hashOfConfig":"53"},{"size":362,"mtime":499162500000,"results":"54","hashOfConfig":"53"},{"size":7540,"mtime":1614886260517,"results":"55","hashOfConfig":"53"},{"size":1637,"mtime":1615746220401,"results":"56","hashOfConfig":"53"},{"size":2526,"mtime":1614887736207,"results":"57","hashOfConfig":"53"},{"size":2003,"mtime":1613401068409,"results":"58","hashOfConfig":"53"},{"size":228,"mtime":1613400776014,"results":"59","hashOfConfig":"53"},{"size":1521,"mtime":1613835455236,"results":"60","hashOfConfig":"53"},{"size":2944,"mtime":1614887228978,"results":"61","hashOfConfig":"53"},{"size":1257,"mtime":1614419279244,"results":"62","hashOfConfig":"53"},{"size":412,"mtime":1613401203529,"results":"63","hashOfConfig":"53"},{"size":3726,"mtime":1614887489485,"results":"64","hashOfConfig":"53"},{"size":84,"mtime":1613051025225,"results":"65","hashOfConfig":"53"},{"size":1404,"mtime":1613401235694,"results":"66","hashOfConfig":"53"},{"size":1787,"mtime":1613837331169,"results":"67","hashOfConfig":"53"},{"size":2640,"mtime":1614877031135,"results":"68","hashOfConfig":"53"},{"size":367,"mtime":1614516836781,"results":"69","hashOfConfig":"53"},{"size":2383,"mtime":1614877031121,"results":"70","hashOfConfig":"53"},{"size":1716,"mtime":1614872770990,"results":"71","hashOfConfig":"53"},{"size":1757,"mtime":1614885759048,"results":"72","hashOfConfig":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9iu0l7",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"1b6hiwl",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"105"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"105"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"105"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"105"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"105"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"105"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"C:\\Users\\Asus\\dev\\mesto-react\\src\\index.js",[],"C:\\Users\\Asus\\dev\\mesto-react\\src\\reportWebVitals.js",[],"C:\\Users\\Asus\\dev\\mesto-react\\src\\utils\\api.js",[],"C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\App.js",[],"C:\\Users\\Asus\\dev\\mesto-react\\src\\contexts\\CurrentUserContext.js",[],"C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\EditAvatarPopup.js",[],"C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\Footer.js",[],"C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\Header.js",[],"C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\ImagePopup.js",["150"],"C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\Main.js",[],"C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\PopupWithForm.js",["151"],"C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\EditProfilePopup.js",["152"],"C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\AddPlacePopup.js",[],"C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\ConfirmPopup.js",[],"C:\\Users\\Asus\\dev\\mesto-react\\src\\components\\Card.js",[],"C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\index.js",[],["153","154"],"C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\reportWebVitals.js",[],"C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\App.js",["155"],"import Header from './Header';\r\nimport Register from './Register';\r\nimport Login from './Login';\r\nimport * as auth from '../utils/auth';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport EditProfilePopup from './EditProfilePopup'\r\nimport EditAvatarPopup from './EditAvatarPopup'\r\nimport ImagePopup from './ImagePopup';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport ConfirmPopup from './ConfirmPopup';\r\nimport { useState, useEffect } from 'react';\r\nimport api from '../utils/api';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\n\r\nfunction App() {\r\n\r\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = useState(false);\r\n  const [isInfoTooltipOpen, setInfoTooltipOpen] = useState(false);\r\n  const [isConfirmPopupOpen, setConfirmPopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n  const [isImagePopupOpen, setImagePopupOpen] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState({\r\n    name: '',\r\n    about: '',\r\n    avatar: ''\r\n  });\r\n  const [cards, setCards] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [registered, setRegistered] = useState(false)\r\n  const [email, setEmail] = useState('');\r\n  const history = useHistory();\r\n\r\n  function handleRegister(credential) {\r\n    setIsLoading(true)\r\n    auth.register(credential)\r\n      .then((res) => {\r\n        if (res) {\r\n          setRegistered(true);\r\n          setInfoTooltipOpen(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setRegistered(false)\r\n        setInfoTooltipOpen(true);\r\n      })\r\n      .finally(() => setIsLoading(false))\r\n  }\r\n\r\n  function handleLogin(credential) {\r\n    if (!credential.email || !credential.password) {\r\n      return\r\n    }\r\n    auth.authorize(credential)\r\n      .then((data) => {\r\n        if (data.token) {\r\n          setEmail(credential.email);\r\n          setLoggedIn(true);\r\n        }\r\n      })\r\n      .then(() => { history.push('/') })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      });\r\n  }\r\n\r\n  function handleLogout() {\r\n    localStorage.removeItem('jwt');\r\n    setLoggedIn(false);\r\n    history.push('/sign-in');\r\n    setEmail('');\r\n  }\r\n\r\n  function closeInfoTooltip() {\r\n    setInfoTooltipOpen(false);\r\n    if (registered === true) {\r\n      history.push('/sign-in');\r\n    }\r\n  }\r\n\r\n\r\n  // eslint-disable-next-line\r\n  useEffect(() => {\r\n    if (localStorage.getItem('jwt')) {\r\n      const jwt = localStorage.getItem('jwt');\r\n\r\n      if (jwt) {\r\n        auth.checkToken(jwt)\r\n          .then((res) => {\r\n            if (res) {\r\n              setLoggedIn(true);\r\n              setEmail(res.data.email);\r\n            }\r\n          })\r\n          .then(() => { history.push('/') })\r\n          .catch((err) => { console.log(err) })\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    Promise.all([api.getUserData(), api.getCardsData()])\r\n      .then((data) => {\r\n        setCurrentUser(data[0]);\r\n        setCards(data[1])\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false)\r\n      })\r\n  }, [])\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    api.changeLikeCardStatus(card._id, isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n        setCards(newCards);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  function handleCardDelete() {\r\n    api.deleteCard(selectedCard._id)\r\n      .then(() => {\r\n        const newCards = cards.filter((c) => { return !(c._id === selectedCard._id) && c });\r\n        setCards(newCards)\r\n        closeAllPopups()\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n\r\n  function handleEditProfileClick() {\r\n    setEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleEditAvatarClick() {\r\n    setEditAvatarPopupOpen(true);\r\n  }\r\n\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n    setImagePopupOpen(true)\r\n  }\r\n\r\n  function handleUpdateUser(userData) {\r\n    setIsLoading(true)\r\n    api.changeUserData(userData)\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n        closeAllPopups();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function handleUpdateAvatar(avatar) {\r\n    setIsLoading(true)\r\n    api.changeAvatar(avatar)\r\n      .then((data) => {\r\n        setCurrentUser(data);\r\n        closeAllPopups()\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function handleAddPlaceSubmit(newCard) {\r\n    setIsLoading(true)\r\n    api.setCardData(newCard)\r\n      .then((data) => {\r\n        setCards([data, ...cards])\r\n        closeAllPopups()\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n      .finally(() => {\r\n        setIsLoading(false)\r\n      })\r\n  }\r\n\r\n  function handleConfirmDeletion(card) {\r\n    setConfirmPopupOpen(true);\r\n    setSelectedCard(card)\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setEditProfilePopupOpen(false);\r\n    setAddPlacePopupOpen(false);\r\n    setEditAvatarPopupOpen(false);\r\n    setSelectedCard({});\r\n    setImagePopupOpen(false);\r\n    setConfirmPopupOpen(false);\r\n  }\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"app\">\r\n        <Header email={email} onSignOut={handleLogout} />\r\n        <Switch>\r\n          <Route path=\"/sign-up\">\r\n            <Register onRegister={handleRegister} />\r\n          </Route >\r\n          <Route path=\"/sign-in\">\r\n            <Login onLogin={handleLogin} history={history} />\r\n          </Route >\r\n          <ProtectedRoute\r\n            path=\"/\"\r\n            loggedIn={loggedIn}\r\n            component={Main}\r\n            onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick}\r\n            onCardClick={handleCardClick} isLoading={isLoading} cards={cards} onCardLike={handleCardLike} onCardDelete={handleConfirmDeletion}\r\n          />\r\n        </Switch>\r\n        <Footer />\r\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} isLoading={isLoading} />\r\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} isLoading={isLoading} />\r\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} isLoading={isLoading} />\r\n        <ConfirmPopup isOpen={isConfirmPopupOpen} onClose={closeAllPopups} onConfirmDeletion={handleCardDelete} />\r\n        <ImagePopup isOpen={isImagePopupOpen} onClose={closeAllPopups} card={selectedCard} />\r\n        <InfoTooltip isOpen={isInfoTooltipOpen} onClose={closeInfoTooltip} registered={registered} isLoading={isLoading} />\r\n      </div >\r\n    </CurrentUserContext.Provider >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\Header.js",[],"C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\AddPlacePopup.js",["156"],"import { useState, useEffect } from 'react';\r\nimport PopupWithForm from './PopupWithForm'\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace, isLoading }) {\r\n\r\n    const initialValue = {\r\n        name: '',\r\n        link: ''\r\n    }\r\n    const [inputValue, setInputValue] = useState(initialValue)\r\n    const [error, setError] = useState({});\r\n    const [validity, setValidity] = useState({})\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onAddPlace({\r\n            name: inputValue.name,\r\n            link: inputValue.link\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            setInputValue(initialValue);\r\n            setError(initialValue)\r\n            setValidity({\r\n                name: true,\r\n                link: true\r\n            })\r\n        }\r\n    }, [isOpen])\r\n\r\n    function handleChange(e) {\r\n        const name = e.target.name\r\n        setInputValue((prevValue) => ({\r\n            ...prevValue,\r\n            [name]: e.target.value\r\n        }))\r\n        setError((prevValue) => ({\r\n            ...prevValue,\r\n            [name]: e.target.validationMessage\r\n        }))\r\n        setValidity((prevValue) => ({\r\n            ...prevValue,\r\n            [name]: e.target.validity.valid\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm name='add' title='Новое место' button={isLoading ? 'Создание...' : 'Создать'} isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit}>\r\n            <>\r\n                <div className=\"popup__input-container\">\r\n                    <input id=\"image-input\" className={`popup__input popup__input_type_image ${!validity.name && 'popup__input_state_invalid'} `} type=\"text\" name=\"name\"\r\n                        value={inputValue.name} placeholder=\"Название\" minLength=\"2\" maxLength=\"30\" required onChange={handleChange} />\r\n                    <span id=\"image-input-error\" className=\"error\">{error.name}</span>\r\n                </div>\r\n                <div className=\"popup__input-container\">\r\n                    <input id=\"link-input\" className={`popup__input popup__input_type_link ${!validity.link && 'popup__input_state_invalid'} `} type=\"url\" name=\"link\" value={inputValue.link}\r\n                        placeholder=\"Ссылка на картинку\" required onChange={handleChange} />\r\n                    <span id=\"link-input-error\" className=\"error\">{error.link}</span>\r\n                </div>\r\n            </>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default AddPlacePopup","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\Main.js",[],"C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\Footer.js",[],"C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\EditAvatarPopup.js",[],"C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\EditProfilePopup.js",["157"],"import { useState, useContext, useEffect } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser, isLoading }) {\r\n    const currentUser = useContext(CurrentUserContext);\r\n    const [inputValue, setInputValue] = useState({\r\n        name: '',\r\n        description: ''\r\n    })\r\n    const [error, setError] = useState({});\r\n    const [validity, setValidity] = useState({});\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            setInputValue((prevValue) => {\r\n                return {\r\n                    ...prevValue,\r\n                    name: currentUser.name,\r\n                    description: currentUser.about\r\n                }\r\n            })\r\n            setError((prevValue) => {\r\n                return {\r\n                    ...prevValue,\r\n                    name: '',\r\n                    description: ''\r\n                }\r\n            })\r\n            setValidity((prevValue) => {\r\n                return {\r\n                    ...prevValue,\r\n                    name: true,\r\n                    description: true\r\n                }\r\n            })\r\n        }\r\n    }, [isOpen])\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onUpdateUser({\r\n            name: inputValue.name,\r\n            about: inputValue.description\r\n        });\r\n    }\r\n\r\n    function handleInputChange(e) {\r\n        const name = e.target.name;\r\n        setInputValue((prevValue) => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: e.target.value\r\n            }\r\n        })\r\n        setError((prevValue) => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: e.target.validationMessage\r\n            }\r\n        })\r\n        setValidity((prevValue) => {\r\n            return {\r\n                ...prevValue,\r\n                [name]: e.target.validity.valid\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <PopupWithForm name='edit' title='Редактировать профиль' button={isLoading ? 'Сохранение...' : 'Сохранить'} isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit}>\r\n            <>\r\n                <div className=\"popup__input-container\">\r\n                    <input id=\"name-input\" className={`popup__input popup__input_type_name ${!validity.name && 'popup__input_state_invalid'} `} type=\"text\" maxLength=\"40\"\r\n                        minLength=\"2\" name=\"name\" value={inputValue.name} placeholder=\"Имя\" required onChange={handleInputChange} />\r\n                    <span id=\"name-input-error\" className=\"error\">{error.name}</span>\r\n                </div>\r\n                <div className=\"popup__input-container\">\r\n                    <input id=\"about-input\" className={`popup__input popup__input_type_about ${!validity.description && 'popup__input_state_invalid'} `} type=\"text\" maxLength=\"200\"\r\n                        minLength=\"2\" name=\"description\" value={inputValue.description} placeholder=\"О себе\" required onChange={handleInputChange} />\r\n                    <span id=\"about-input-error\" className=\"error\">{error.description}</span>\r\n                </div>\r\n            </>\r\n        </PopupWithForm>\r\n    )\r\n}\r\n\r\nexport default EditProfilePopup","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\ImagePopup.js",["158"],"import { useEffect } from 'react'\r\n\r\nfunction ImagePopup({ card, isOpen, onClose }) {\r\n\r\n    function handleOverlayClose(evt) {\r\n        if (evt.target.classList.contains('popup')) { onClose() }\r\n    }\r\n\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            const onKeypress = (evt) => {\r\n                if (evt.key === 'Escape') {\r\n                    onClose()\r\n                }\r\n            }\r\n            document.addEventListener('keydown', onKeypress)\r\n            return () => {\r\n                document.removeEventListener('keydown', onKeypress)\r\n            }\r\n        }\r\n    }, [isOpen])\r\n\r\n    return (\r\n        <div className={`popup popup_type_image ${isOpen && 'popup_opened'}`} onMouseDown={handleOverlayClose} >\r\n            <div className=\"popup__container popup__container_type_image\">\r\n                <button className=\"button popup__close popup__close_type_image\" type=\"button\"\r\n                    aria-label=\"кнопка: закрыть\" onClick={onClose}></button>\r\n                <img className=\"popup__image\" src={card.link} alt={card.name} />\r\n                <h3 className=\"popup__image-title\">{card.name}</h3>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImagePopup ","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\ConfirmPopup.js",[],"C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\utils\\api.js",[],"C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\contexts\\CurrentUserContext.js",[],"C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\Card.js",[],"C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\PopupWithForm.js",["159"],"import { useRef, useState, useEffect } from 'react'\r\n\r\nfunction PopupWithForm({ name, title, button, isOpen, onClose, children, onSubmit }) {\r\n    const [isFormValid, setFormValid] = useState(false)\r\n    const formRef = useRef();\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        setFormValid(formRef.current.checkValidity())\r\n    })\r\n\r\n    function handleOverlayClose(evt) {\r\n        if (evt.target.classList.contains('popup')) { onClose() }\r\n    }\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            const onKeypress = (evt) => {\r\n                if (evt.key === 'Escape') {\r\n                    onClose()\r\n                }\r\n            }\r\n            document.addEventListener('keydown', onKeypress)\r\n            return () => {\r\n                document.removeEventListener('keydown', onKeypress)\r\n            }\r\n        }\r\n    }, [isOpen])\r\n\r\n    return (\r\n        <div className={`popup popup_type_${name} ${isOpen && 'popup_opened'}`} onMouseDown={handleOverlayClose}>\r\n            <div className={`popup__container popup__container_type_${name}`}>\r\n                <button className={`button popup__close popup__close_type${name}`} type=\"button\" aria-label=\"кнопка: закрыть\" onClick={onClose}></button>\r\n                <h2 className=\"popup__title\">{title}</h2>\r\n                <form className={`popup__form popup__form_type_${name}`} name={name} onSubmit={onSubmit} ref={formRef}>\r\n                    {children}\r\n                    <button className={`button popup__save popup__save_type_${name} ${!isFormValid && 'popup__save_invalid'}`} aria-label=\"кнопка: Сохранить\">{button}</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default PopupWithForm","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\Register.js",[],"C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\ProtectedRoute.js",[],"C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\Login.js",[],"C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\components\\InfoTooltip.js",["160"],"\r\nimport { useEffect } from 'react';\r\nimport okImage from '../images/OK.svg';\r\nimport nokImage from '../images/NOK.svg';\r\nimport Spin from '../images/Spin.svg'\r\n\r\nfunction InfoTooltip({ isOpen, onClose, registered, isLoading }) {\r\n\r\n    function handleOverlayClose(evt) {\r\n        if (evt.target.classList.contains('popup')) { onClose() }\r\n    }\r\n    // eslint-disable-next-line\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            const onKeypress = (evt) => {\r\n                if (evt.key === 'Escape') {\r\n                    onClose()\r\n                }\r\n            }\r\n            document.addEventListener('keydown', onKeypress)\r\n            return () => {\r\n                document.removeEventListener('keydown', onKeypress)\r\n            }\r\n        }\r\n    }, [isOpen])\r\n\r\n    return (\r\n        <div className={`popup ${isOpen && 'popup_opened'}`} onMouseDown={handleOverlayClose}>\r\n            <div className=\"popup__container popup__container_type_indicator\">\r\n                {isLoading\r\n                    ? (<img src={Spin} alt=\"spin\" ></img>)\r\n                    : (\r\n                        <>\r\n                            <button className=\"button popup__close popup__close_type_indicator\" onClick={onClose}></button>\r\n                            <img className=\"popup__indicator\" src={registered ? okImage : nokImage} alt=\"индикатор\"></img>\r\n                            <h3 className=\"popup__message\">{registered ? 'Вы успешно зарегистировались!' : 'Что-то пошло не так! Попробуйте еще раз.'}</h3>\r\n\r\n                        </>\r\n                    )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InfoTooltip","C:\\Users\\Asus\\dev\\mesto-react-auth\\src\\utils\\auth.js",[],{"ruleId":"161","severity":1,"message":"162","line":22,"column":8,"nodeType":"163","endLine":22,"endColumn":16,"suggestions":"164"},{"ruleId":"161","severity":1,"message":"162","line":27,"column":8,"nodeType":"163","endLine":27,"endColumn":16,"suggestions":"165"},{"ruleId":"161","severity":1,"message":"166","line":39,"column":8,"nodeType":"163","endLine":39,"endColumn":16,"suggestions":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"161","severity":1,"message":"172","line":106,"column":6,"nodeType":"163","endLine":106,"endColumn":8,"suggestions":"173"},{"ruleId":"161","severity":1,"message":"174","line":31,"column":8,"nodeType":"163","endLine":31,"endColumn":16,"suggestions":"175"},{"ruleId":"161","severity":1,"message":"166","line":39,"column":8,"nodeType":"163","endLine":39,"endColumn":16,"suggestions":"176"},{"ruleId":"161","severity":1,"message":"162","line":22,"column":8,"nodeType":"163","endLine":22,"endColumn":16,"suggestions":"177"},{"ruleId":"161","severity":1,"message":"162","line":27,"column":8,"nodeType":"163","endLine":27,"endColumn":16,"suggestions":"178"},{"ruleId":"161","severity":1,"message":"162","line":25,"column":8,"nodeType":"163","endLine":25,"endColumn":16,"suggestions":"179"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onClose'. Either include it or remove the dependency array. If 'onClose' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["180"],["181"],"React Hook useEffect has missing dependencies: 'currentUser.about' and 'currentUser.name'. Either include them or remove the dependency array.",["182"],"no-native-reassign",["183"],"no-negated-in-lhs",["184"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["185"],"React Hook useEffect has a missing dependency: 'initialValue'. Either include it or remove the dependency array.",["186"],["187"],["188"],["189"],["190"],{"desc":"191","fix":"192"},{"desc":"191","fix":"193"},{"desc":"194","fix":"195"},"no-global-assign","no-unsafe-negation",{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"194","fix":"200"},{"desc":"191","fix":"201"},{"desc":"191","fix":"202"},{"desc":"191","fix":"203"},"Update the dependencies array to be: [isOpen, onClose]",{"range":"204","text":"205"},{"range":"206","text":"205"},"Update the dependencies array to be: [currentUser.about, currentUser.name, isOpen]",{"range":"207","text":"208"},"Update the dependencies array to be: [history]",{"range":"209","text":"210"},"Update the dependencies array to be: [initialValue, isOpen]",{"range":"211","text":"212"},{"range":"213","text":"208"},{"range":"214","text":"205"},{"range":"215","text":"205"},{"range":"216","text":"205"},[629,637],"[isOpen, onClose]",[890,898],[1257,1265],"[currentUser.about, currentUser.name, isOpen]",[3188,3190],"[history]",[815,823],"[initialValue, isOpen]",[1257,1265],[629,637],[890,898],[771,779]]